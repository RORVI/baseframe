openapi: 3.0.0
info:
  title: Baseframe API
  version: 1.0.0
  description: Auto-generated OpenAPI documentation for the Baseframe project
tags:
  - name: Admin
  - name: Balances
  - name: Contracts
  - name: Jobs
paths:
  /admin/best-profession:
    get:
      summary: Get the profession that earned the most money in a time range
      description: Returns the profession with the highest total earnings between the given start and end dates.
      tags:
        - Admin
      parameters:
        - in: query
          name: start
          required: true
          description: Start date (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - in: query
          name: end
          required: true
          description: End date (YYYY-MM-DD)
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Best profession found
          content:
            application/json:
              schema:
                type: object
                properties:
                  profession:
                    type: string
                    example: Software Developer
                  earnings:
                    type: number
                    format: float
                    example: 20000
        '400':
          description: Invalid date range or missing parameters
        '500':
          description: Internal server error

  /admin/best-clients:
    get:
      summary: Get the clients that paid the most in a time range
      description: Returns the top clients ranked by their total payments.
      tags:
        - Admin
      parameters:
        - in: query
          name: start
          required: true
          description: Start date (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - in: query
          name: end
          required: true
          description: End date (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - in: query
          name: limit
          required: false
          description: |
            Max number of clients to return (default: 2)
          schema:
            type: integer
            default: 2
      responses:
        '200':
          description: Top clients retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 12
                    fullName:
                      type: string
                      example: John Doe
                    paid:
                      type: number
                      example: 30500
        '400':
          description: Invalid parameters
        '500':
          description: Internal server error

  /balances/deposit/{userId}:
    post:
      summary: Deposit money to a user's balance
      description: Allows depositing a specific amount to a user's balance.
      tags:
        - Balances
      parameters:
        - in: path
          name: userId
          required: true
          description: User ID to deposit to
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
                  format: float
                  minimum: 0.01
                  example: 150.5
      responses:
        '200':
          description: Deposit successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Deposit completed
        '400':
          description: Validation failed
        '404':
          description: User not found

  /contracts/{id}:
    get:
      summary: Get contract by ID
      description: Returns a contract only if the profile is the client or contractor.
      tags:
        - Contracts
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            minimum: 1
          description: ID of the contract
      responses:
        '200':
          description: Contract found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contract'
        '400':
          description: Invalid contract ID
        '403':
          description: Forbidden
        '404':
          description: Contract not found

  /contracts:
    get:
      summary: Get all active contracts for current profile
      description: Returns all non-terminated contracts for the authenticated user.
      tags:
        - Contracts
      responses:
        '200':
          description: List of contracts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contract'
        '401':
          description: Unauthorized

  /jobs/unpaid:
    get:
      summary: Get unpaid jobs
      description: Returns unpaid jobs for the authenticated contractor.
      tags:
        - Jobs
      responses:
        '200':
          description: List of unpaid jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        '401':
          description: Unauthorized

  /jobs/{job_id}/pay:
    post:
      summary: Pay for a job
      description: Allows a client to pay for a job, transferring funds if balance allows.
      tags:
        - Jobs
      parameters:
        - in: path
          name: job_id
          required: true
          schema:
            type: integer
            minimum: 1
          description: ID of the job
      responses:
        '200':
          description: Job paid successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  job:
                    $ref: '#/components/schemas/Job'
        '400':
          description: Payment failed
        '403':
          description: Not authorized
        '404':
          description: Job not found

components:
  schemas:
    Contract:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "b17f22cc-083f-47ab-b637-d4b44d421b71"
        terms:
          type: string
          example: "Deliver the MVP within 3 weeks."
        status:
          type: string
          enum: [new, in_progress, terminated]
          example: in_progress
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Job:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "e9b7a4fc-05fc-40b6-a6d2-9e8d56e03e6a"
        description:
          type: string
          example: "Design UI mockups for client app"
        price:
          type: number
          format: float
          example: 1250.00
        paid:
          type: boolean
          example: false
        paymentDate:
          type: string
          format: date-time
          nullable: true
        contractId:
          type: string
          format: uuid
          example: "b17f22cc-083f-47ab-b637-d4b44d421b71"

    Profile:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "f2c6318c-5b5a-4e6e-a937-7990cbeab90f"
        firstName:
          type: string
          example: Alice
        lastName:
          type: string
          example: Johnson
        profession:
          type: string
          example: Graphic Designer
        balance:
          type: number
          format: float
          example: 1200.50
        type:
          type: string
          enum: [client, contractor]
          example: contractor
